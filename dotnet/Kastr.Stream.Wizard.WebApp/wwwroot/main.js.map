{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/change-scene-dialog/change-scene-dialog.component.ts","./src/app/components/change-scene-dialog/change-scene-dialog.component.html","./src/app/components/start-csgo-dialog/csgo-start-dialog.component.ts","./src/app/components/start-csgo-dialog/csgo-start-dialog.component.html","./src/app/components/start-machine-dialog/start-machine-dialog.component.ts","./src/app/components/start-machine-dialog/start-machine-dialog.component.html","./src/app/interfaces.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { delayWhen, EMPTY, retry, retryWhen, tap, timer } from 'rxjs';\r\nimport { ChangeSceneDialogComponent } from './components/change-scene-dialog/change-scene-dialog.component';\r\nimport { CsgoStartDialogComponent } from './components/start-csgo-dialog/csgo-start-dialog.component';\r\nimport { StartMachineDialogComponent } from \"./components/start-machine-dialog/start-machine-dialog.component\";\r\nimport { environment } from \"../environments/environment\";\r\nimport {\r\n  INotificationPreview,\r\n  MachineState,\r\n  ObsStateType,\r\n  IClientState,\r\n  IObsState,\r\n  CounterStikeGameStateType,\r\n  CounterStikeGameState,\r\n  IGlobalState\r\n} from './interfaces';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  public currentSceneImage: string = \"\";\r\n  public previewSceneImage: string = \"\";\r\n  public machineState: MachineState = MachineState.Off;\r\n  public ping?: number | null;\r\n\r\n  private _remoteIp?: string | null;\r\n  private previewSocket$: WebSocketSubject<INotificationPreview> | undefined;\r\n  private stateSocket$: WebSocketSubject<IGlobalState> | undefined;\r\n  private clientSocket$: WebSocketSubject<IClientState> | undefined;\r\n\r\n  public loaders: string[] = [];\r\n  public loadingMessage: string | null = null;\r\n  public previewsState: IGlobalState | undefined;\r\n  private scenesList: string[] = [];\r\n\r\n  constructor(\r\n    private _snackBar: MatSnackBar,\r\n    private _dialog: MatDialog,\r\n    private _http: HttpClient) {\r\n    this._remoteIp = localStorage.getItem('ip');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clientSocket$ = webSocket<IClientState>(environment.notificationWebSocket.client);\r\n\r\n    this.clientSocket$\r\n      .pipe(\r\n        tap((msg: IClientState) => {\r\n\r\n          switch (msg.RemoteServerState) {\r\n            case MachineState.Off:\r\n\r\n              this.ping = 0;\r\n\r\n              this._dialog.closeAll();\r\n\r\n              this._dialog.open(StartMachineDialogComponent, {\r\n                hasBackdrop: false,\r\n                disableClose: true,\r\n                maxWidth: '340px',\r\n                width: '100%',\r\n                panelClass: 'kastr-dialog-container'\r\n              });\r\n\r\n              if (this.machineState == MachineState.Off) {\r\n                break;\r\n              }\r\n\r\n              this.disconectToSocketRemoteServer();\r\n              this.machineState = msg.RemoteServerState;\r\n\r\n              this.loaders.pop();\r\n              this._snackBar.open(\"Remote server is OFF.\", \"\", {\r\n                duration: 5000,\r\n                verticalPosition: 'top',\r\n                horizontalPosition: 'center'\r\n              });\r\n\r\n              break;\r\n            case MachineState.On:\r\n\r\n              if (msg.LastSyncDate) {\r\n                this.ping = (new Date().getTime() - new Date(msg.LastSyncDate).getTime()) / 1000;\r\n              }\r\n\r\n              if (this.machineState !== MachineState.On &&\r\n                msg.RemoteServerState == MachineState.On) {\r\n                this.connectToSocketRemoteServer();\r\n\r\n                this.machineState = msg.RemoteServerState;\r\n                this._dialog.closeAll();\r\n                this._snackBar.dismiss();\r\n                this.loaders.pop();\r\n                break;\r\n              }\r\n\r\n              break;\r\n            case MachineState.TurningOff:\r\n              if (this.machineState == MachineState.TurningOff) {\r\n                break;\r\n              }\r\n\r\n              this.disconectToSocketRemoteServer();\r\n              this.machineState = msg.RemoteServerState;\r\n\r\n              this.machineState = MachineState.TurningOff;\r\n              this.loaders.push(\"MACHINE_STATE\" + MachineState[this.machineState]);\r\n              this.loaders = this.loaders.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n              this._snackBar.open(\"Turning off remote server.\", \"\", {\r\n                verticalPosition: 'top',\r\n                horizontalPosition: 'center'\r\n              });\r\n\r\n              break;\r\n            case MachineState.TurningOn:\r\n              if (this.machineState == MachineState.TurningOn) {\r\n                break;\r\n              }\r\n\r\n              this.disconectToSocketRemoteServer();\r\n              this.machineState = msg.RemoteServerState;\r\n\r\n              this.machineState = MachineState.TurningOn;\r\n              this.loaders.push(\"MACHINE_STATE\" + MachineState[this.machineState]);\r\n              this.loaders = this.loaders.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n              this._snackBar.open(\"Turning on remote server.\", \"\", {\r\n                verticalPosition: 'top',\r\n                horizontalPosition: 'center'\r\n              });\r\n\r\n              break;\r\n            default:\r\n              console.warn(\"The state not mapped\" + msg.RemoteServerState);\r\n          }\r\n        }),\r\n        retryWhen((errors: any) => {\r\n          return errors.pipe(delayWhen((val: any) => timer(val * 1000)))\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  disconectToSocketRemoteServer() {\r\n    this.stateSocket$?.unsubscribe();\r\n    this.previewSocket$?.unsubscribe();\r\n  }\r\n\r\n  connectToSocketRemoteServer() {\r\n    console.log(\"TENTANDO CONNECTAR IP:\" + this._remoteIp);\r\n\r\n    this.stateSocket$ = webSocket<IGlobalState>(\"ws://\" + this.removeHttp(this._remoteIp) + 'notification/state/subscribe');\r\n    this.previewSocket$ = webSocket<INotificationPreview>(\"ws://\" + this.removeHttp(this._remoteIp) + 'notification/preview/subscribe');\r\n\r\n    this.previewSocket$\r\n      .pipe(\r\n        retry(3)\r\n      )\r\n      .subscribe(\r\n        msg => {\r\n          if (msg.CurrentScene) {\r\n            this.currentSceneImage = msg.CurrentScene;\r\n          }\r\n        },\r\n        err => console.log(err)\r\n      );\r\n\r\n    this.stateSocket$\r\n      .pipe(\r\n        retry(3),\r\n      ).subscribe((msg: IGlobalState) => {\r\n\r\n        if (this.previewsState?.ObsState.State !== msg.ObsState.State) {\r\n          this.handlerObsState(msg.ObsState);\r\n        }\r\n\r\n        if (this.previewsState?.CounterStikeGameState.State !== msg.CounterStikeGameState.State) {\r\n          this.handlerCsGoState(msg.CounterStikeGameState);\r\n        }\r\n\r\n        this.previewsState = msg;\r\n      });\r\n  }\r\n\r\n  canShowPreview(): boolean {\r\n    return (this.previewsState?.ObsState.State != ObsStateType.Aborted) &&\r\n      (this.previewsState?.ObsState.State != ObsStateType.Closed) &&\r\n      (this.previewsState?.ObsState.State != ObsStateType.Opening)\r\n  }\r\n\r\n  private proccessLoadingCsgo(state: CounterStikeGameState) {\r\n    this.loaders.push(\"CSGO\" + CounterStikeGameStateType[state.State]);\r\n    this.loaders = this.loaders.filter((v, i, a) => a.indexOf(v) === i);\r\n    this._snackBar.open(CounterStikeGameStateType[state.State] + \"  -  Counter-Strike GO\", \"\", {\r\n      duration: 1000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'center'\r\n    });\r\n  }\r\n\r\n  private stopProccessLoadingCsgo(state: CounterStikeGameState, withMessage: boolean) {\r\n    this.loaders.pop();\r\n    this.loadingMessage = null;\r\n    if (withMessage)\r\n      this._snackBar.open(CounterStikeGameStateType[state.State] + \"  -  Counter-Strike GO\", \"\", {\r\n        duration: 1000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'center'\r\n      });\r\n  }\r\n\r\n  handlerCsGoState(state: CounterStikeGameState) {\r\n    switch (state.State) {\r\n      case CounterStikeGameStateType.Closing:\r\n        this.proccessLoadingCsgo(state);\r\n        break;\r\n\r\n      case CounterStikeGameStateType.Connecting:\r\n        this.proccessLoadingCsgo(state);\r\n        this.loadingMessage = \"Connecting to \" + state.ServerAddress;\r\n        break;\r\n\r\n      case CounterStikeGameStateType.Aborted:\r\n        this._snackBar.open(state.ErrorMessages[0], \"\", {\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'center'\r\n        });\r\n        this.stopProccessLoadingCsgo(state, false);\r\n        break\r\n      case CounterStikeGameStateType.Closed:\r\n      case CounterStikeGameStateType.Connected:\r\n        this.stopProccessLoadingCsgo(state, true);\r\n        break;\r\n\r\n      default:\r\n        console.warn(\"The type is not mapped.\");\r\n    }\r\n\r\n\r\n  }\r\n\r\n  private proccessLoadingObs(state: IObsState) {\r\n    this.loaders.push(\"OBS\" + ObsStateType[state.State]);\r\n    this.loaders = this.loaders.filter((v, i, a) => a.indexOf(v) === i);\r\n    this._snackBar.open(ObsStateType[state.State] + \"- OBS\", \"\", {\r\n      duration: 1000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'center'\r\n    });\r\n  }\r\n\r\n  private stopProccessLoadingObs(state: IObsState, withMessage: boolean) {\r\n    this.loaders.pop();\r\n    this.loadingMessage = null;\r\n    if (withMessage)\r\n      this._snackBar.open(ObsStateType[state.State] + \"- OBS\", \"\", {\r\n        duration: 1000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'center'\r\n      });\r\n  }\r\n\r\n  handlerObsState(state: IObsState) {\r\n\r\n    switch (state.State) {\r\n      case ObsStateType.ChangingScene:\r\n      case ObsStateType.ChangingScenePreview:\r\n      case ObsStateType.Closing:\r\n      case ObsStateType.Opening:\r\n      case ObsStateType.StartingStream:\r\n      case ObsStateType.StopingStream:\r\n        this.proccessLoadingObs(state);\r\n        break;\r\n\r\n      case ObsStateType.Opened:\r\n        this.stopProccessLoadingObs(state, true);\r\n        this.getScenes();\r\n        break;\r\n\r\n      case ObsStateType.Streaming:\r\n        this.stopProccessLoadingObs(state, true);\r\n\r\n        if (this.scenesList.length == 0) {\r\n          this.getScenes();\r\n        }\r\n        break;\r\n\r\n      case ObsStateType.Aborted:\r\n      case ObsStateType.ChangedScene:\r\n      case ObsStateType.ChangedScenePreview:\r\n      case ObsStateType.Closed:\r\n        this.stopProccessLoadingObs(state, true);\r\n        break;\r\n\r\n      default:\r\n        console.warn(\"The type is not mapped.\");\r\n    }\r\n  }\r\n\r\n  startCsGo() {\r\n    this._dialog.open(CsgoStartDialogComponent, {\r\n      width: '100%',\r\n      maxWidth: '424px',\r\n      panelClass: 'kastr-dialog-container',\r\n      data: {\r\n        remoteIp: this._remoteIp,\r\n      }\r\n    });\r\n  }\r\n\r\n  csgoIsClosedOrAborted() {\r\n    return this.previewsState?.CounterStikeGameState.State == CounterStikeGameStateType.Closed ||\r\n      this.previewsState?.CounterStikeGameState.State == CounterStikeGameStateType.Aborted;\r\n  }\r\n\r\n  obsIsClosedOrAborted() {\r\n    return this.previewsState?.ObsState.State == ObsStateType.Aborted ||\r\n      this.previewsState?.ObsState.State == ObsStateType.Closed;\r\n  }\r\n\r\n  obsIsClosedOrStreaming() {\r\n    return this.obsIsClosedOrAborted() ||\r\n      this.previewsState?.ObsState.State == ObsStateType.Streaming;\r\n  }\r\n\r\n  obsIsNotClosedOrNotStreaming() {\r\n    return !this.obsIsClosedOrAborted() &&\r\n      this.previewsState?.ObsState.State != ObsStateType.Streaming;\r\n  }\r\n\r\n  openPreviewModal() {\r\n    console.log(this.scenesList.filter(x => x != this.previewsState?.ObsState.CurrenteScene), this.previewsState?.ObsState.CurrenteScene, this.scenesList);\r\n\r\n    this._dialog.open(ChangeSceneDialogComponent, {\r\n      maxWidth: \"906px\",\r\n      width: \"100%\",\r\n      data: {\r\n        remoteIp: this._remoteIp,\r\n        initialImage: this.previewSceneImage,\r\n        options: this.scenesList.filter(x => x != this.previewsState?.ObsState.CurrenteScene),\r\n        selected: this.previewsState?.ObsState.PreviewScene\r\n      },\r\n      panelClass: 'kastr-dialog-container'\r\n    });\r\n  }\r\n\r\n  getScenes() {\r\n    this._http.get(this._remoteIp + \"api/obs/scenes\")\r\n      .subscribe((data) => {\r\n        this.scenesList = data as string[];\r\n      });\r\n  }\r\n\r\n  startStream() {\r\n    this._http.get(this._remoteIp + \"api/obs/start/stream\")\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  stopStream() {\r\n    this._http.get(this._remoteIp + \"api/obs/stop/stream\")\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  closeCsGo() {\r\n    this._http.get(this._remoteIp + \"api/counter-strike/close\")\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  turnOfRemoteServer() {\r\n    this._http.get(\"/api/machine-manager/turnOff\")\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  removeHttp(url?: string | null) {\r\n    if (url) {\r\n      return url.replace(/^http?:\\/\\//, '');\r\n    }\r\n\r\n    console.error(\"URL INVALID\");\r\n    return \"\";\r\n  }\r\n}\r\n\r\n","<div class=\"fixed-top\" >\r\n  <h3 class=\"align-items-center\" *ngIf=\"ping != null else noPing\">\r\n    <mat-icon>network_wifi</mat-icon>{{ping}}\r\n  </h3>\r\n      <ng-template #noPing>\r\n      <h5><mat-icon>perm_scan_wifi</mat-icon>No Conection</h5>\r\n    </ng-template>\r\n</div>\r\n\r\n<div class=\"loader-container\" *ngIf=\"loaders.length > 0\">\r\n  <div class=\"loader\"></div>\r\n</div>\r\n\r\n<div class=\"container d-flex flex-column full-height justify-content-center\" *ngIf=\"machineState == 1\">\r\n\r\n  <div class=\"row gx-1 mb-5\">\r\n    \r\n    <div class=\"col-12 d-flex justify-content-center\"  style=\"max-height: 506px;\">\r\n      <img class=\"img-fluid rounded mx-auto d-block\" *ngIf=\"currentSceneImage else withoutImage\" style=\"height: 100%;\" [src]=\"currentSceneImage\" alt=\"preview\">\r\n\r\n      <ng-template #withoutImage>\r\n        <div class=\"alert alert-danger\" role=\"alert\">\r\n          Cant get preview from OBS, please restart remote server and try again.\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  \r\n  </div>\r\n\r\n  <div class=\"row gx-3\">\r\n\r\n    <div class=\"col-12 col-md-6 d-flex justify-content-center justify-content-md-end mb-3 \">\r\n      <button class=\"btn-kastr-lg btn-kastr\" (click)=\"openPreviewModal()\">Change Scene</button>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-6 d-flex justify-content-center justify-content-md-start mb-3 \">\r\n\r\n      <button class=\"btn-kastr btn-kastr-lg btn-kastr-gray\" \r\n        *ngIf=\"csgoIsClosedOrAborted() else stopCsgoElse\" \r\n        (click)=\"startCsGo()\">\r\n        Start CSGO\r\n      </button>\r\n\r\n      <ng-template #stopCsgoElse>\r\n\r\n        <button class=\"btn-kastr btn-kastr-lg btn-kastr-red\" (click)=\"closeCsGo()\">Stop CSGO</button>\r\n\r\n      </ng-template>  \r\n      \r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row gx-3\">\r\n\r\n    <div class=\"col-12 col-md-6 d-flex justify-content-center justify-content-md-end mb-3\">\r\n      <button class=\"btn-kastr-lg btn-kastr btn-kastr-red\" (click)=\"turnOfRemoteServer()\">Turn Off Server</button>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-6 d-flex justify-content-center justify-content-md-start mb-3\">\r\n      <button class=\"btn-kastr btn-kastr-lg btn-kastr-gray\" (click)=\"startStream()\" *ngIf=\"!obsIsClosedOrStreaming() else stopStreamElse\">Start Stream</button>\r\n\r\n      <ng-template #stopStreamElse>\r\n        <button class=\"btn-kastr btn-kastr-lg btn-kastr-red\" (click)=\"stopStream()\">Stop Stream</button>\r\n      </ng-template>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>","import { APP_INITIALIZER, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ChangeSceneDialogComponent } from './components/change-scene-dialog/change-scene-dialog.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { StartMachineDialogComponent } from './components/start-machine-dialog/start-machine-dialog.component';\r\nimport { CsgoStartDialogComponent } from \"./components/start-csgo-dialog/csgo-start-dialog.component\";\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { IRemoteIp } from \"./interfaces\";\r\n\r\n\r\nfunction initializeAppFactory(httpClient: HttpClient): () => Observable<any> {\r\n  return () => httpClient.get<IRemoteIp>(\"/api/configuration/remote-api\")\r\n    .pipe(\r\n      tap(e => {\r\n        localStorage.setItem(\"ip\", e['ip']);\r\n      })\r\n    );\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChangeSceneDialogComponent,\r\n    StartMachineDialogComponent,\r\n    CsgoStartDialogComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    HttpClientModule,\r\n    MatIconModule,\r\n    TooltipModule.forRoot()\r\n  ],\r\n  providers: [{\r\n    provide: APP_INITIALIZER,\r\n    useFactory: initializeAppFactory,\r\n    deps: [HttpClient],\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { webSocket } from \"rxjs/webSocket\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { EMPTY } from 'rxjs';\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\n\r\ninterface INotificationPreview {\r\n  Previews: any;\r\n  PreviewScene: string;\r\n  CurrentScene: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-change-scene',\r\n  templateUrl: 'change-scene-dialog.component.html',\r\n  styleUrls: [\"./change-scene-dialog.component.scss\"]\r\n})\r\nexport class ChangeSceneDialogComponent {\r\n  public previews: any;\r\n  public previewSceneImage: string = \"\";\r\n  public selectedScene: string = \"\";\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ChangeSceneDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { initialImage: string, options: string[], selected: string, remoteIp: string },\r\n    private http: HttpClient\r\n  ) {\r\n    this.previewSceneImage = data.initialImage;\r\n    this.selectedScene = data.selected;\r\n\r\n    var preview = webSocket<INotificationPreview>(\"ws://\" + this.removeHttp(data.remoteIp) + 'notification/preview/subscribe');\r\n\r\n    preview.subscribe(\r\n      msg => {\r\n        if (msg.Previews)\r\n          this.previews = msg.Previews;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  selectScene(scene: string) {\r\n    if (scene == this.selectedScene) {\r\n      this.selectedScene = \"\";\r\n\r\n      return;\r\n    }\r\n\r\n    this.selectedScene = scene;\r\n    this.select(scene);\r\n  }\r\n\r\n  select(scene: any) {\r\n    this.http.get(this.data.remoteIp + \"api/obs/change-preview-scene?scene=\" + scene)\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  isSelected(value: string) {\r\n    return value === this.data.selected;\r\n  }\r\n\r\n  onClickOk(): void {\r\n    this.dialogRef.close();\r\n    this.http.get(this.data.remoteIp + \"api/obs/change-current-scene?scene=\" + this.selectedScene)\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  removeHttp(url?: string | null) {\r\n    if (url) {\r\n      return url.replace(/^http?:\\/\\//, '');\r\n    }\r\n\r\n    console.error(\"URL INVALID\");\r\n    return \"\";\r\n  }\r\n}\r\n","<div class=\"container-fluid full-height overflow-auto\">\r\n\r\n  <div class=\"d-flex flex-row flex-wrap align-items-center justify-content-center\" *ngIf=\"previews else loadingPreviews\">\r\n    <div class=\"pe-md-3 mb-2 scene-option\"\r\n        [ngClass]=\"{'scene-option--selected' : scene == selectedScene}\"\r\n        (click)=\"selectScene(scene)\"\r\n      *ngFor=\"let scene of data.options\">\r\n        <img class=\"img-fluid rounded mx-auto d-block\" [src]=\"previews[scene]\">\r\n        <span class=\"justify-content-center align-items-center\">{{scene}}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-template #loadingPreviews>\r\n    <h3>Loading</h3>\r\n  </ng-template>\r\n</div>\r\n\r\n  <div class=\"container-fluid justify-content-center align-items-center mt-3\">\r\n    <div class=\"row g-1 py-2\">\r\n      <div class=\"col-12 col-md-6 d-flex justify-content-center align-items-center\">\r\n        <button class=\"btn-kastr\" mat-dialog-close>Cancel</button>\r\n      </div>\r\n      <div class=\"col-12 col-md-6 d-flex justify-content-center align-items-center\">\r\n        <button class=\"btn-kastr btn-kastr-red\" [disabled]=\"!selectedScene\" (click)=\"onClickOk()\">Apply</button>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { EMPTY } from 'rxjs';\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\n@Component({\r\n  selector: 'csgo-start-dialog',\r\n  templateUrl: 'csgo-start-dialog.component.html',\r\n  styleUrls: [\"./csgo-start-dialog.component.scss\"]\r\n})\r\nexport class CsgoStartDialogComponent {\r\n  public ip: string = \"\";\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<CsgoStartDialogComponent>,\r\n    private http: HttpClient,\r\n    @Inject(MAT_DIALOG_DATA) public data: { remoteIp: string },\r\n  ) { }\r\n\r\n  onClickOk(): void {\r\n    this.dialogRef.close();\r\n\r\n    this.http.get(this.data.remoteIp + \"api/counter-strike/start?ip=\" + this.ip)\r\n      .subscribe(() => EMPTY);\r\n  }\r\n}\r\n","<h3 class=\"mb-4\">CSGO Settings</h3>\r\n\r\n<div class=\"input-group mb-5\">\r\n\r\n  <input type=\"text\" class=\"form-control custom-input\" placeholder=\"GOTV*\" [(ngModel)]='ip'>\r\n\r\n</div>\r\n\r\n<h3 class=\"mb-4\">Hud Settings <mat-icon tooltip=\"If you don't configure hud, it will run with the default values\" style=\"font-size:16px; width: 16px; height: 16px\">info</mat-icon></h3>\r\n\r\n<div class=\"input-group mb-3\">\r\n\r\n  <input type=\"text\" class=\"form-control custom-input me-md-4 me-sm-0\" placeholder=\"Counter-Terrorists\">\r\n  <button class=\"file-upload-button\" tooltip=\"Upload Counter-Terrorists Logo\">\r\n    <mat-icon>cloud_upload</mat-icon>\r\n  </button>\r\n\r\n</div>\r\n\r\n<div class=\"input-group mb-5\">\r\n\r\n  <input type=\"text\" class=\"form-control custom-input me-md-4 me-sm-0\" placeholder=\"Terrorists\">\r\n  <button class=\"file-upload-button\" tooltip=\"Upload Terrorists Logo\">\r\n    <mat-icon>cloud_upload</mat-icon>\r\n  </button>\r\n\r\n</div>\r\n\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-6 g-1 pe-1\">\r\n      <button mat-dialog-close class=\"btn-kastr\">Cancel</button>\r\n    </div>\r\n    <div class=\"col-6 g-1\">\r\n      <button class=\"btn-kastr btn-kastr-red\" (click)=\"onClickOk()\" [disabled]=\"!ip\">Start</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { EMPTY } from 'rxjs';\n\n@Component({\n  selector: 'app-start-machine-dialog',\n  templateUrl: './start-machine-dialog.component.html',\n  styleUrls: ['./start-machine-dialog.component.scss']\n})\nexport class StartMachineDialogComponent implements OnInit {\n\n  constructor(\n    private _http: HttpClient\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  turnOn() {\n    this._http.get(\"/api/machine-manager/turnOn\")\n      .subscribe(() => EMPTY);\n  }\n}\n","<h1>Welcome to StreamTV</h1>\n<h3>Remote server is <span class=\"text-kastr-red\">off!</span></h3>\n<button class=\"btn-kastr btn-kastr-red\" (click)=\"turnOn()\">Turn on Remote Server</button>","export interface INotificationPreview {\r\n  PreviewScene: string;\r\n  CurrentScene: string;\r\n}\r\n\r\nexport enum MachineState {\r\n  Off = 0,\r\n  On = 1,\r\n  TurningOn = 2,\r\n  TurningOff = 3\r\n}\r\n\r\nexport enum ObsStateType {\r\n  Opening = 0,\r\n  Opened = 1,\r\n  Closed = 2,\r\n  Closing = 3,\r\n  StartingStream = 4,\r\n  Streaming = 5,\r\n  StopingStream = 6,\r\n  ChangingScene = 7,\r\n  ChangedScene = 8,\r\n  Aborted = 9,\r\n  ChangingScenePreview = 10,\r\n  ChangedScenePreview = 11\r\n}\r\n\r\nexport interface IClientState {\r\n  RemoteServerState: MachineState;\r\n  LastSyncDate: string;\r\n}\r\n\r\nexport interface IObsState {\r\n  State: ObsStateType;\r\n  ErrorMessages: string[];\r\n  CurrenteScene: string;\r\n  PreviewScene: string;\r\n}\r\n\r\nexport enum CounterStikeGameStateType {\r\n  Connecting = 0,\r\n  Connected = 1,\r\n  Closing = 2,\r\n  Closed = 3,\r\n  Aborted = 4\r\n}\r\nexport interface CounterStikeGameState {\r\n  ServerAddress: string;\r\n  ErrorMessages: string[];\r\n  State: CounterStikeGameStateType;\r\n}\r\n\r\nexport interface IGlobalState {\r\n  ObsState: IObsState;\r\n  CounterStikeGameState: CounterStikeGameState;\r\n}\r\n\r\nexport interface IRemoteIp {\r\n  ip: string;\r\n}","export const environment = {\r\n  production: false,\r\n  notificationWebSocket: {\r\n    client: \"ws://localhost:8080/client/notification/subscribe\"\r\n  }\r\n};\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}