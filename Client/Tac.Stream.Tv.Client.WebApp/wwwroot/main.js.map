{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dialog-change-scene.component.ts","./src/app/components/dialog-change-scene.component.html","./src/app/components/dialog-start-csgo.component.ts","./src/app/components/dialog-start-csgo.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, ViewChild, ElementRef, OnInit, MissingTranslationStrategy } from '@angular/core';\r\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DialogChangeSceneComponent } from \"./components/dialog-change-scene.component\";\r\nimport { DialogStartCsGoComponent } from \"./components/dialog-start-csgo.component\";\r\nimport { delayWhen, EMPTY, retry, retryWhen, tap, timer } from 'rxjs';\r\nimport { environment } from \"../environments/environment\";\r\n\r\ninterface INotificationPreview {\r\n  PreviewScene: string;\r\n  CurrentScene: string;\r\n}\r\n\r\nenum MachineState {\r\n  Off = 0,\r\n  On = 1,\r\n  TurningOn = 2,\r\n  TurningOff = 3\r\n}\r\n\r\nenum ObsStateType {\r\n  Opening = 0,\r\n  Opened = 1,\r\n  Closed = 2,\r\n  Closing = 3,\r\n  StartingStream = 4,\r\n  Streaming = 5,\r\n  StopingStream = 6,\r\n  ChangingScene = 7,\r\n  ChangedScene = 8,\r\n  Aborted = 9\r\n}\r\n\r\ninterface IClientState {\r\n  RemoteServerState: MachineState;\r\n}\r\n\r\ninterface IObsState {\r\n  State: ObsStateType;\r\n  ErrorMessages: string[];\r\n  CurrenteScene: string;\r\n  PreviewScene: string;\r\n}\r\n\r\nenum CounterStikeGameStateType {\r\n  Connecting = 0,\r\n  Connected = 1,\r\n  Closing = 2,\r\n  Closed = 3,\r\n  Aborted = 4\r\n}\r\ninterface CounterStikeGameState {\r\n  ServerAddress: string;\r\n  ErrorMessages: string[];\r\n  State: CounterStikeGameStateType;\r\n}\r\n\r\ninterface IGlobalState {\r\n  ObsState: IObsState;\r\n  CounterStikeGameState: CounterStikeGameState;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public currentSceneImage: string = \"\";\r\n  public previewSceneImage: string = \"\";\r\n  public machineState: MachineState = MachineState.Off;\r\n  private previewSocket$: WebSocketSubject<INotificationPreview> | undefined;\r\n  private stateSocket$: WebSocketSubject<IGlobalState> | undefined;\r\n  private clientSocket$: WebSocketSubject<IClientState> | undefined;\r\n\r\n  @ViewChild('streamingAnimation', { static: true })\r\n  streamingAnimation?: ElementRef<HTMLDivElement>;\r\n\r\n  public loaders: string[] = [];\r\n  public loadingMessage: string | null = null;\r\n  public previewsState: IGlobalState | undefined;\r\n  private scenesList: string[] = [];\r\n\r\n  constructor(private _snackBar: MatSnackBar,\r\n    public dialog: MatDialog,\r\n    private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    this.clientSocket$ = webSocket<IClientState>(environment.notificationWebSocket.client);\r\n    this.connectToSocketRemoteServer();\r\n\r\n    this.clientSocket$\r\n      .pipe(\r\n        tap((msg: IClientState) => {\r\n          console.log(\"@CLIENT_STATE\", msg);\r\n\r\n          switch (msg.RemoteServerState) {\r\n            case MachineState.Off:\r\n\r\n              if (this.machineState == MachineState.Off) {\r\n                break;\r\n              }\r\n\r\n              this.disconectToSocketRemoteServer();\r\n              this.machineState = msg.RemoteServerState;\r\n\r\n              this.loaders.pop();\r\n              this._snackBar.open(\"Remote server is OFF.\", \"\", {\r\n                duration: 5000,\r\n                verticalPosition: 'top',\r\n                horizontalPosition: 'center'\r\n              });\r\n\r\n              break;\r\n            case MachineState.On:\r\n\r\n              if (this.machineState !== MachineState.On &&\r\n                msg.RemoteServerState == MachineState.On) {\r\n                this._snackBar.dismiss();\r\n                this.connectToSocketRemoteServer();\r\n\r\n                this.machineState = msg.RemoteServerState;\r\n                this.loaders.pop();\r\n                break;\r\n              }\r\n\r\n\r\n\r\n              break;\r\n\r\n            case MachineState.TurningOff:\r\n              if (this.machineState == MachineState.TurningOff) {\r\n                break;\r\n              }\r\n\r\n              this.disconectToSocketRemoteServer();\r\n              this.machineState = msg.RemoteServerState;\r\n\r\n              this.machineState = MachineState.TurningOff;\r\n              this.loaders.push(\"MACHINE_STATE\" + MachineState[this.machineState]);\r\n              this.loaders = this.loaders.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n              this._snackBar.open(\"Turning off remote server.\", \"\", {\r\n                verticalPosition: 'top',\r\n                horizontalPosition: 'center'\r\n              });\r\n              break;\r\n            case MachineState.TurningOn:\r\n              if (this.machineState == MachineState.TurningOn) {\r\n                break;\r\n              }\r\n\r\n              this.disconectToSocketRemoteServer();\r\n              this.machineState = msg.RemoteServerState;\r\n\r\n              this.machineState = MachineState.TurningOn;\r\n              this.loaders.push(\"MACHINE_STATE\" + MachineState[this.machineState]);\r\n              this.loaders = this.loaders.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n              this._snackBar.open(\"Turning on remote server.\", \"\", {\r\n                verticalPosition: 'top',\r\n                horizontalPosition: 'center'\r\n              });\r\n              break;\r\n\r\n            default:\r\n              console.warn(\"The state not mapped\" + msg.RemoteServerState);\r\n          }\r\n        }),\r\n        retryWhen((errors: any) => {\r\n          return errors.pipe(delayWhen((val: any) => timer(val * 1000)))\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  disconectToSocketRemoteServer() {\r\n    this.stateSocket$?.unsubscribe();\r\n    this.previewSocket$?.unsubscribe();\r\n  }\r\n\r\n  connectToSocketRemoteServer() {\r\n    this.stateSocket$ = webSocket<IGlobalState>(environment.notificationWebSocket.state);\r\n    this.previewSocket$ = webSocket<INotificationPreview>(environment.notificationWebSocket.preview);\r\n\r\n    this.previewSocket$\r\n      .pipe(\r\n        retry()\r\n      )\r\n      .subscribe(\r\n        msg => {\r\n          if (msg) {\r\n            this.currentSceneImage = msg.CurrentScene;\r\n            this.previewSceneImage = msg.PreviewScene;\r\n          }\r\n        },\r\n        err => console.log(err),\r\n        () => {\r\n          this.previewSocket$ = webSocket<INotificationPreview>(environment.notificationWebSocket.preview);\r\n        }\r\n      );\r\n\r\n    this.stateSocket$\r\n      .pipe(\r\n        tap((msg: IGlobalState) => {\r\n\r\n          if (this.previewsState?.ObsState.State !== msg.ObsState.State) {\r\n            this.handlerObsState(msg.ObsState);\r\n          }\r\n\r\n          if (this.previewsState?.CounterStikeGameState.State !== msg.CounterStikeGameState.State) {\r\n            this.handlerCsGoState(msg.CounterStikeGameState);\r\n          }\r\n\r\n          this.previewsState = msg;\r\n        }),\r\n        retryWhen((errors: any) => {\r\n          return errors.pipe(delayWhen((val: any) => timer(val * 1000)))\r\n        })\r\n      ).subscribe();\r\n  }\r\n\r\n  canShowPreview(): boolean {\r\n    return (this.previewsState?.ObsState.State != ObsStateType.Aborted) &&\r\n      (this.previewsState?.ObsState.State != ObsStateType.Closed) &&\r\n      (this.previewsState?.ObsState.State != ObsStateType.Opening)\r\n  }\r\n\r\n  private proccessLoadingCsgo(state: CounterStikeGameState) {\r\n    this.loaders.push(\"CSGO\" + CounterStikeGameStateType[state.State]);\r\n    this.loaders = this.loaders.filter((v, i, a) => a.indexOf(v) === i);\r\n    this._snackBar.open(CounterStikeGameStateType[state.State] + \"  -  Counter-Strike GO\", \"\", {\r\n      duration: 1000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'center'\r\n    });\r\n  }\r\n\r\n  private stopProccessLoadingCsgo(state: CounterStikeGameState, withMessage: boolean) {\r\n    this.loaders.pop();\r\n    this.loadingMessage = null;\r\n    if (withMessage)\r\n      this._snackBar.open(CounterStikeGameStateType[state.State] + \"  -  Counter-Strike GO\", \"\", {\r\n        duration: 1000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'center'\r\n      });\r\n  }\r\n\r\n  handlerCsGoState(state: CounterStikeGameState) {\r\n    console.log(state);\r\n\r\n    switch (state.State) {\r\n      case CounterStikeGameStateType.Closing:\r\n        this.proccessLoadingCsgo(state);\r\n        break;\r\n\r\n      case CounterStikeGameStateType.Connecting:\r\n        this.proccessLoadingCsgo(state);\r\n        this.loadingMessage = \"Connecting to \" + state.ServerAddress;\r\n        break;\r\n\r\n      case CounterStikeGameStateType.Aborted:\r\n        this._snackBar.open(state.ErrorMessages[0], \"\", {\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'center'\r\n        });\r\n        this.stopProccessLoadingCsgo(state, false);\r\n        break\r\n      case CounterStikeGameStateType.Closed:\r\n      case CounterStikeGameStateType.Connected:\r\n        this.stopProccessLoadingCsgo(state, true);\r\n        break;\r\n\r\n      default:\r\n        console.warn(\"The type is not mapped.\");\r\n    }\r\n\r\n\r\n  }\r\n\r\n  private proccessLoadingObs(state: IObsState) {\r\n    this.loaders.push(\"OBS\" + ObsStateType[state.State]);\r\n    this.loaders = this.loaders.filter((v, i, a) => a.indexOf(v) === i);\r\n    this._snackBar.open(ObsStateType[state.State] + \"- OBS\", \"\", {\r\n      duration: 1000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'center'\r\n    });\r\n  }\r\n\r\n  private stopProccessLoadingObs(state: IObsState, withMessage: boolean) {\r\n    this.loaders.pop();\r\n    this.loadingMessage = null;\r\n    if (withMessage)\r\n      this._snackBar.open(ObsStateType[state.State] + \"- OBS\", \"\", {\r\n        duration: 1000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'center'\r\n      });\r\n  }\r\n\r\n  handlerObsState(state: IObsState) {\r\n    console.log(state);\r\n\r\n    switch (state.State) {\r\n      case ObsStateType.ChangingScene:\r\n      case ObsStateType.Closing:\r\n      case ObsStateType.Opening:\r\n      case ObsStateType.StartingStream:\r\n      case ObsStateType.StopingStream:\r\n        this.proccessLoadingObs(state);\r\n        break;\r\n\r\n      case ObsStateType.Opened:\r\n        this.stopProccessLoadingObs(state, true);\r\n        this.stopAnimationStreaming();\r\n        this.getScenes();\r\n        break;\r\n\r\n      case ObsStateType.Streaming:\r\n        this.stopProccessLoadingObs(state, true);\r\n        this.startAnimationStreaming();\r\n\r\n        if (this.scenesList.length == 0) {\r\n          this.getScenes();\r\n        }\r\n        break;\r\n\r\n      case ObsStateType.Aborted:\r\n      case ObsStateType.ChangedScene:\r\n      case ObsStateType.Closed:\r\n        this.stopProccessLoadingObs(state, true);\r\n        break;\r\n\r\n      default:\r\n        console.warn(\"The type is not mapped.\");\r\n    }\r\n  }\r\n\r\n  csgoIsClosedOrAborted() {\r\n    return this.previewsState?.CounterStikeGameState.State == CounterStikeGameStateType.Closed ||\r\n      this.previewsState?.CounterStikeGameState.State == CounterStikeGameStateType.Aborted;\r\n  }\r\n\r\n  obsIsClosedOrAborted() {\r\n    return this.previewsState?.ObsState.State == ObsStateType.Aborted ||\r\n      this.previewsState?.ObsState.State == ObsStateType.Closed;\r\n  }\r\n\r\n  obsIsClosedOrStreaming() {\r\n    return this.obsIsClosedOrAborted() ||\r\n      this.previewsState?.ObsState.State == ObsStateType.Streaming;\r\n  }\r\n\r\n  obsIsNotClosedOrNotStreaming() {\r\n    return !this.obsIsClosedOrAborted() &&\r\n      this.previewsState?.ObsState.State != ObsStateType.Streaming;\r\n  }\r\n\r\n  startAnimationStreaming() {\r\n    this.streamingAnimation?.nativeElement.classList.add(\"streaming\");\r\n  }\r\n\r\n  stopAnimationStreaming() {\r\n    this.streamingAnimation?.nativeElement.classList.remove(\"streaming\");\r\n  }\r\n\r\n  openPreviewModal() {\r\n    console.log(this.scenesList.filter(x => x != this.previewsState?.ObsState.CurrenteScene), this.previewsState?.ObsState.CurrenteScene, this.scenesList);\r\n\r\n    this.dialog.open(DialogChangeSceneComponent, {\r\n      data: {\r\n        initialImage: this.previewSceneImage,\r\n        options: this.scenesList.filter(x => x != this.previewsState?.ObsState.CurrenteScene),\r\n        selected: this.previewsState?.ObsState.PreviewScene\r\n      }\r\n    });\r\n  }\r\n\r\n  getScenes() {\r\n    this.http.get(environment.apiUrl + \"/obs/scenes\")\r\n      .subscribe((data) => {\r\n        this.scenesList = data as string[];\r\n      });\r\n  }\r\n\r\n  openObs() {\r\n    this.http.get(environment.apiUrl + \"/obs/start\")\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  closeObs() {\r\n    this.http.get(environment.apiUrl + \"/obs/close\")\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  startStream() {\r\n    this.http.get(environment.apiUrl + \"/obs/start/stream\")\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  stopStream() {\r\n    this.http.get(environment.apiUrl + \"/obs/stop/stream\")\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  startCsGo() {\r\n    this.dialog.open(DialogStartCsGoComponent);\r\n  }\r\n\r\n  closeCsGo() {\r\n    this.http.get(environment.apiUrl + \"/counter-strike/close\")\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  turnOnOrOffRemoteServer() {\r\n    if (this.machineState == MachineState.On) {\r\n      this.http.get(\"/api/machine-manager/turnOff\")\r\n        .subscribe(() => EMPTY);\r\n    } else if (this.machineState == MachineState.Off) {\r\n      this.http.get(\"/api/machine-manager/turnOn\")\r\n        .subscribe(() => EMPTY);\r\n    }\r\n  }\r\n\r\n  hasConnectionToRemoteServer() {\r\n    return this.machineState == MachineState.On;\r\n  }\r\n}","<div class=\"loader-container\" *ngIf=\"loaders.length > 0\">\r\n  <div class=\"loader\">\r\n  </div>\r\n  <div [hidden]=\"loadingMessage != null\" class=\"message\">\r\n    <h1>{{loadingMessage}}</h1>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"layout layout-streaming\">\r\n  <div class=\"current-scene-preview\">\r\n    <img [src]=\"currentSceneImage\" alt=\"preview\" [hidden]=\"!canShowPreview() || !hasConnectionToRemoteServer()\">\r\n    <h3 [hidden]=\"canShowPreview() && hasConnectionToRemoteServer()\">OBS IS CLOSED</h3>\r\n  </div>\r\n  <div class=\"form\">\r\n    <div class=\"button-col\">\r\n      <button mat-flat-button [ngClass]=\"{\r\n        'turn-on': !hasConnectionToRemoteServer(),\r\n        'turn-off': hasConnectionToRemoteServer()\r\n      }\" (click)=\"turnOnOrOffRemoteServer()\">Turn\r\n        {{hasConnectionToRemoteServer()?\r\n        \"Off\" : \"On\"}} Remote Server</button>\r\n      <!-- <button mat-flat-button color=\"primary\" [disabled]=\"!obsIsClosedOrAborted() || !hasConnectionToRemoteServer()\"\r\n        (click)=\"openObs()\">Open Obs</button>\r\n      <button mat-flat-button color=\"primary\" [disabled]=\"obsIsClosedOrAborted() || !hasConnectionToRemoteServer()\"\r\n        (click)=\"closeObs()\">Close\r\n        Obs</button> -->\r\n          <button mat-flat-button color=\"primary\" [disabled]=\"!csgoIsClosedOrAborted() || !hasConnectionToRemoteServer()\"\r\n        (click)=\"startCsGo()\">Start Cs\r\n        Go</button>\r\n      <button mat-flat-button color=\"primary\" [disabled]=\"csgoIsClosedOrAborted() || !hasConnectionToRemoteServer()\"\r\n        (click)=\"closeCsGo()\">Close Cs\r\n        Go</button>\r\n    </div>\r\n\r\n    <div class=\"button-col\">\r\n      <button mat-flat-button color=\"primary\" [disabled]=\"obsIsClosedOrAborted() || !hasConnectionToRemoteServer()\"\r\n        (click)=\"openPreviewModal()\">Open\r\n        Preview</button>\r\n      <button mat-flat-button color=\"primary\" [disabled]=\"obsIsClosedOrStreaming() || !hasConnectionToRemoteServer()\"\r\n        (click)=\"startStream()\">Start\r\n        Stream</button>\r\n      <button mat-flat-button color=\"primary\"\r\n        [disabled]=\"obsIsClosedOrAborted() || obsIsNotClosedOrNotStreaming() || !hasConnectionToRemoteServer()\"\r\n        (click)=\"stopStream()\">Stop\r\n        Stream</button>\r\n    </div>\r\n\r\n    <!-- <div class=\"button-col\">\r\n      <button mat-flat-button color=\"primary\" [disabled]=\"!csgoIsClosedOrAborted() || !hasConnectionToRemoteServer()\"\r\n        (click)=\"startCsGo()\">Start Cs\r\n        Go</button>\r\n      <button mat-flat-button color=\"primary\" [disabled]=\"csgoIsClosedOrAborted() || !hasConnectionToRemoteServer()\"\r\n        (click)=\"closeCsGo()\">Close Cs\r\n        Go</button>\r\n    </div> -->\r\n  </div>\r\n\r\n  <div #streamingAnimation class=\"animate-flicker\"></div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DialogChangeSceneComponent } from './components/dialog-change-scene.component';\r\nimport { DialogStartCsGoComponent } from './components/dialog-start-csgo.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DialogChangeSceneComponent,\r\n    DialogStartCsGoComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    HttpClientModule,\r\n    MatIconModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { webSocket } from \"rxjs/webSocket\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { EMPTY } from 'rxjs';\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n\r\ninterface INotificationPreview {\r\n  PreviewScene: string;\r\n  CurrentScene: string;\r\n}\r\n\r\nconst preview = webSocket<INotificationPreview>(environment.notificationWebSocket.preview);\r\n\r\n@Component({\r\n  selector: 'dialog-change-scene',\r\n  templateUrl: 'dialog-change-scene.component.html',\r\n  styleUrls: [\"./dialog-change-scene.component.scss\"]\r\n})\r\nexport class DialogChangeSceneComponent {\r\n  public previewSceneImage: string = \"\";\r\n  public selectedOption: string = \"\";\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogChangeSceneComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { initialImage: string, options: string[], selected: string },\r\n    private http: HttpClient\r\n  ) {\r\n    this.previewSceneImage = data.initialImage;\r\n    this.selectedOption = data.selected;\r\n\r\n    preview.subscribe(\r\n      msg => {\r\n        this.previewSceneImage = msg.PreviewScene;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  select(scene: any) {\r\n    this.http.get(environment.apiUrl + \"/obs/change-preview-scene?scene=\" + scene)\r\n      .subscribe(() => EMPTY);\r\n  }\r\n\r\n  isSelected(value: string) {\r\n    return value === this.data.selected;\r\n  }\r\n\r\n  onClickOk(): void {\r\n    this.dialogRef.close();\r\n    this.http.get(environment.apiUrl + \"/obs/change-current-scene?scene=\" + this.selectedOption)\r\n      .subscribe(() => EMPTY);\r\n  }\r\n}","<div mat-dialog-title>\r\n  <div class=\"body\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Scenes</mat-label>\r\n      <mat-select [(ngModel)]=\"selectedOption\" (selectionChange)=\"select($event.value)\">\r\n        <mat-option *ngFor=\"let option of data.options\" [value]=\"option\">\r\n          {{option}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n<div mat-dialog-content>\r\n  <div class=\"preview-scene\">\r\n    <img [src]=\"previewSceneImage\">\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button mat-button mat-dialog-close cdkFocusInitial (click)=\"onClickOk()\">Apply</button>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { EMPTY } from 'rxjs';\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Component({\r\n  selector: 'dialog-start-csgo',\r\n  templateUrl: 'dialog-start-csgo.component.html',\r\n  styleUrls: [\"./dialog-start-csgo.component.scss\"]\r\n})\r\nexport class DialogStartCsGoComponent {\r\n  public ip: string = \"\";\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogStartCsGoComponent>,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  onClickOk(): void {\r\n    this.dialogRef.close();\r\n\r\n    this.http.get(environment.apiUrl + \"/counter-strike/start?ip=\" + this.ip)\r\n      .subscribe(() => EMPTY);\r\n  }\r\n}","<div mat-dialog-content>\r\n  <div class=\"content\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Server Ip</mat-label>\r\n      <input [required]=\"true\" matInput placeholder=\"Server Ip\" [(ngModel)]='ip'>\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button mat-button mat-dialog-close cdkFocusInitial (click)=\"onClickOk()\">Start & Connect</button>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:9001/api\",\r\n  notificationWebSocket: {\r\n    state: \"ws://localhost:9001/notification/state/subscribe\",\r\n    preview: \"ws://localhost:9001/notification/preview/subscribe\",\r\n    client: \"wss://localhost:44307/client/notification/subscribe\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}